// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portifolio.Context;

#nullable disable

namespace Portifolio.Context.Migrations
{
    [DbContext(typeof(AreaDbContext))]
    [Migration("20240821113455_MigrationInicial")]
    partial class MigrationInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Portifolio.Domain.Animais.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("Portifolio.Domain.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataDeRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Portifolio.Domain.Especies.Especie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Descricao")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("Portifolio.Domain.FichasTecnica.FichaTecnica", b =>
                {
                    b.Property<Guid>("IdAnimal")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdRaca")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("IdAnimal");

                    b.HasIndex("IdRaca");

                    b.ToTable("FichaTecnica");
                });

            modelBuilder.Entity("Portifolio.Domain.Racas.Raca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Descricao")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdEspecie")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Raca");
                });

            modelBuilder.Entity("Portifolio.Domain.Animais.Animal", b =>
                {
                    b.HasOne("Portifolio.Domain.Clientes.Cliente", "Cliente")
                        .WithMany("Animais")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Portifolio.Domain.FichasTecnica.FichaTecnica", b =>
                {
                    b.HasOne("Portifolio.Domain.Animais.Animal", "Animal")
                        .WithOne("FichaTecnica")
                        .HasForeignKey("Portifolio.Domain.FichasTecnica.FichaTecnica", "IdAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portifolio.Domain.Racas.Raca", "Raca")
                        .WithMany("FichasTecnica")
                        .HasForeignKey("IdRaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Raca");
                });

            modelBuilder.Entity("Portifolio.Domain.Racas.Raca", b =>
                {
                    b.HasOne("Portifolio.Domain.Especies.Especie", "Especie")
                        .WithMany("Racas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Portifolio.Domain.Animais.Animal", b =>
                {
                    b.Navigation("FichaTecnica")
                        .IsRequired();
                });

            modelBuilder.Entity("Portifolio.Domain.Clientes.Cliente", b =>
                {
                    b.Navigation("Animais");
                });

            modelBuilder.Entity("Portifolio.Domain.Especies.Especie", b =>
                {
                    b.Navigation("Racas");
                });

            modelBuilder.Entity("Portifolio.Domain.Racas.Raca", b =>
                {
                    b.Navigation("FichasTecnica");
                });
#pragma warning restore 612, 618
        }
    }
}
